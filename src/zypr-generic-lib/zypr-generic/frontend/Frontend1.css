:root {
  --node-box-shadow-thickness: 0.3rem;
  --node-box-shadow-thickness-neg: calc(-1 * var(--node-box-shadow-thickness));

  --cursor-background-color: rgb(244, 244, 244);
  --select-background-color: rgb(208, 236, 255);
}

/* node */

.node {
  display: inline;
  border-radius: 0.2rem;
}

/* tm_hol */

.tm_hol-inner {
  display: inline-block;
  white-space: pre;
  border-radius: 0.2rem;
  /* padding: 0.6rem 0.6rem; */
  padding: 0 0.2rem;
  display: inline-block;
  /* background-color: rgba(255, 173, 145, 0.5); */
  box-shadow: 0 0 0 1px rgb(255, 106, 0) inset, 0 0 2px 1px black inset;
}

.node.cursorable>.tm_hol-inner:hover {
  /* background-color: rgba(255, 204, 187, 0.5); */
}

.node.hole-inner {
  display: inline-block;
  margin: 0 0;
  padding: 0 0.2rem;
  min-width: 0.5rem;
  border-radius: 0;
}

.node.hole-inner.cursor {
  box-shadow: none;
  border-radius: 0;
  background-color: unset;
}

.node.hole-inner.cursor .hole-inner-cursor {
  animation: blink-visibility-animation 1s steps(2, start) infinite;
  -webkit-animation: blink-visibility-animation 1s steps(2, start) infinite;
}

.node.hole-inner:hover {
  background-color: unset;
}

/* ty_hol */

.ty_hol-substitutions {
  border: 2px dotted black;
}

.ty_hol-substitution {}

.ty_hol-inner {
  display: inline-block;
  white-space: pre;
  border-radius: 0.2rem;
  padding: 0 0.2rem;
  display: inline-block;
  /* background-color: rgba(255, 114, 147, 0.5); */
  box-shadow: 0 0 0 1px rgb(255, 86, 126) inset, 0 0 2px 1px black inset;
}

.node.cursorable>.ty_hol-inner:hover {
  /* background-color: rgba(255, 174, 193, 0.5); */
}

/* query */

.query {
  display: inline;
  position: relative;
}

.query-inner {
  position: absolute;
  left: 0;
  top: 2rem;
  min-width: 4rem;

  border-radius: 0.2rem;
  box-shadow: 0 0 0 1px black, 2px 2px 4px 0 black;
}

.query-string {
  background-color: rgb(255, 208, 106);
  padding: 0.2rem;

  border-bottom: 1px solid black;
}

.query-string-inner {
  /* background-color: rgb(255, 208, 106); */
}

.query-completions {}

.query-completions-inner {}

.query-completion {
  padding: 0.2rem;
  background-color: white;
}

.query-completion:hover {
  cursor: pointer;
  padding: 0.2rem;
  background-color: rgb(100, 100, 255);
}

.query-completion-active,
.query-completion-active:hover {
  background-color: blue;
}

.query-completion-empty,
.query-completion-empty:hover {
  color: red;
  background-color: white;
  font-style: italic;
}

.query-insert-top {
  background-color: var(--select-background-color);

  border-radius: 0.2rem;
  box-shadow: 0 0 0 1px orange inset, 2px 2px 4px 0 black;
  padding: 0 0.2rem;
}

.query-insert-bot {
  background-color: white;

  border-radius: 0.2rem;
  box-shadow: 0 0 0 1px orange inset, 1px 1px 2px 0 black inset;
  padding: 0 0.2rem;
}

.query-replace-new {
  background-color: var(--select-background-color);

  border-radius: 0.2rem;
  box-shadow: 0 0 0 1px orange inset, 2px 2px 4px 0 black inset;
}

/* punctuation */

.punctuation {
  display: inline;
}

.punctuation.application {
  /* margin-right: 0.5rem; */
  margin: 0 0.2rem;
  color: gray;
}

.punctuation.lambda {
  margin: 0 0.5rem 0 0;
}

.punctuation.keyword {
  color: purple;
  font-weight: bold;
}

.punctuation.colon {
  margin: 0 0.5rem;
}

.punctuation.colonHole {
  margin: 0 0.2rem;
}

.punctuation.colon_shortFront {
  margin-right: 0.5rem;
}

.punctuation.mapsto {
  margin: 0 0.5rem;
}

.punctuation.let {
  margin: 0 0.5rem 0 0;
}

.punctuation.in {
  margin: 0 0.5rem;
}

.punctuation.arrowR {
  margin: 0 0.5rem;
}

.punctuation.assign {
  margin: 0 0.5rem;
}

.punctuation.assign_shortFront {
  margin-right: 0.5rem;
}

.punctuation.data {
  margin: 0 0.5rem 0 0;
}

.punctuation.buffer {
  margin: 0 0.5rem 0 0;
}

.punctuation.rewrite {
  margin: 0 0.5rem;
}

/* indentation */

.indent {
  display: inline-block;
}

.indent-step {
  display: inline-block;
  width: 1rem;
}

/* cursor, select, etc. */


.node.cursorable {
  border-radius: 0.2rem;
  cursor: pointer;
}

.node.cursor {
  box-shadow: var(--node-box-shadow-thickness-neg) 0 0 0 blue, var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: var(--cursor-background-color);

  /* animation: blink-box-shadow-animation 1s steps(2, start) infinite;
  -webkit-animation: blink-box-shadow-animation 1s steps(2, start) infinite; */
}

.node.selectable {
  border-radius: 0.2rem;
  cursor: pointer;
}

.node.select-top {
  border-radius: 0.2rem;
  box-shadow: calc(0.5*var(--node-box-shadow-thickness-neg)) 0 0 0 blue, calc(0.5 * var(--node-box-shadow-thickness)) 0 0 0 blue;
  background-color: var(--select-background-color)
}

.node.select-bot {
  border-radius: 0.2rem;
  box-shadow: calc(0.5*var(--node-box-shadow-thickness-neg)) 0 0 0 blue, calc(0.5*var(--node-box-shadow-thickness)) 0 0 0 blue;
  background-color: var(--cursor-background-color)
}

.node.query-replace-new {
  border-radius: 0.2rem;
  padding: 0 0.2rem;
  background-color: rgb(196, 196, 255);
  box-shadow: 0 0 0 1px black;
}

.node.query-replace-old {
  border-radius: 0.2rem;
  padding: 0 0.2rem;
  background-color: rgb(205, 205, 205);
  box-shadow: 0 0 0 1px black;
}



/* binds and labels */

.label {
  display: inline-block;
  border-radius: 0.2rem;
}

.label-empty {
  /* border: 1px dotted red; */
  /* background-color: orange; */
  /* box-shadow: 0 0 0 1px orange; */
  box-shadow: 0 0 0 1px rgb(255, 182, 80) inset, 0 0 2px 1px black inset;
  padding: 0 0.2rem;
}

.node .bnd-inner {
  display: inline-block;
  margin: 0 0;
  padding: 0 0.2rem;
  min-width: 0.4rem;
}

.bnd-cursor {
  visibility: hidden;
  animation: blink-visibility-animation 1s steps(2, start) infinite;
  -webkit-animation: blink-visibility-animation 1s steps(2, start) infinite;
}

.node.cursor>.bnd-inner>.bnd-cursor {
  visibility: visible;
}

.node.tm-bnd.cursor,
.node.ty-bnd.cursor {
  box-shadow: none;
}

.node.bnd-empty,
.node.bnd-empty.cursor {
  display: inline-block;

  animation: none;
  -webkit-animation: none;

  border-radius: 0.2rem;
  /* padding: 0 0.2rem; */
  white-space: pre;
  /* background-color: rgb(255, 214, 157); */
  box-shadow: 0 0 0 1px rgb(255, 182, 80) inset, 0 0 2px 1px black inset;
}

/* lists */

/* .node.list.cons */

.node.list.cons {
  padding-left: 0.3rem;
}

.node.list.cons.list-head {
  /* padding-left: 0.1rem; */
}

/* .node.list.nil */

.node.list.nil {
  /* padding-left: 0.2rem; */
  /* margin-right: 0.1rem; */
}

/* .listNil */

.punctuation.listNil {
  display: inline-block;
  width: calc(0.5*var(--node-box-shadow-thickness));
  margin-left: 0.1rem;
}

.node.list.nil.list-head>.punctuation.listNil {
  margin-left: -0.1rem;
  margin-right: -0.1rem;
}

/* .list and .cursor */

.node.list.cons.cursor {
  border-radius: 0;
  box-shadow: inset var(--node-box-shadow-thickness) 0 0 0 blue;
}

.node.list.nil.cursor {
  box-shadow: none;
  background-color: unset;
}

.node.list.nil.cursor>.listNil {
  background-color: blue;
  /* animation: blink-background-color-animation 1s steps(2, start) infinite;
  -webkit-animation: blink-background-color-animation 1s steps(2, start) infinite; */
}

.node.list.cons.select-top {
  border-radius: 0;
  box-shadow: inset calc(0.5 * var(--node-box-shadow-thickness)) 0 0 0 blue;
  background-color: var(--select-background-color)
}

.node.list.cons.select-bot {
  border-radius: 0;
  box-shadow: inset calc(0.5 * var(--node-box-shadow-thickness)) 0 0 0 blue;
  background-color: white;
}

.node.list.nil.select-bot {
  box-shadow: none;
}

.node.list.nil.select-bot>.listNil {
  background-color: blue;
}

.node.list.query-replace-new {
  padding: 0 0.2rem;
  background-color: rgb(196, 196, 255);
  box-shadow: 0 0 0 1px black;
}

.node.list.query-replace-old {
  padding: 0 0.2rem;
  background-color: rgb(205, 205, 205);
  box-shadow: 0 0 0 1px black;
}

.list-head-nil-wrapper {
  display: inline-block;
}

.list-head-nil-wrapper>* {
  visibility: hidden;
}

.list-head-nil-wrapper:hover>* {
  visibility: visible;
}

.list-head-nil-wrapper>.cursor {
  visibility: visible;
}

/* specific lists */

.ty-bnd-list_nil {
  margin-right: -0.1rem;
}

/* hover */

.hover {
  cursor: pointer;
  background-color: var(--cursor-background-color)
}

.hover.node.list.nil {
  cursor: pointer;
  background-color: unset;
}

/* mouseDown hover and cursor */

/* mouseDown: hover outside of cursor */
.mouseDown .hover {
  box-shadow: var(--node-box-shadow-thickness-neg) 0 0 0 blue, var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: var(--cursor-background-color);
}

/* mouseDown: hover inside of cursor */
.mouseDown .cursor .hover {
  box-shadow: var(--node-box-shadow-thickness-neg) 0 0 0 blue, var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: white;
}

/* mouseDown: cursor outside of hover */
.mouseDown .cursor {
  box-shadow: var(--node-box-shadow-thickness-neg) 0 0 0 blue, var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: var(--cursor-background-color);
}

/* mouseDown: cursor inside of hover */
.mouseDown .hover .cursor {
  box-shadow: var(--node-box-shadow-thickness-neg) 0 0 0 blue, var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: white;
}

/* mouseDown hover and cursor for .node.list.cons */

/* mouseDown: hover outside of cursor */
.mouseDown .hover.node.list.cons {
  border-radius: 0;
  box-shadow: inset var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: var(--cursor-background-color);
}

/* mouseDown: hover inside of cursor */
.mouseDown .cursor .hover.node.list.cons {
  border-radius: 0;
  box-shadow: inset var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: white;
}

/* mouseDown: cursor outside of hover */
.mouseDown .cursor.node.list.cons {
  border-radius: 0;
  box-shadow: inset var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: var(--cursor-background-color);
}

/* mouseDown: cursor inside of hover */
.mouseDown .hover .cursor.node.list.cons {
  border-radius: 0;
  box-shadow: inset var(--node-box-shadow-thickness) 0 0 0 blue;
  background-color: white;
}

/* mouseDown hover and cursor for .node.list.nil */

/* mouseDown: hover outside of cursor */
.mouseDown .hover.node.list.nil {
  border-radius: 0;
  box-shadow: none;
  background-color: unset;
}

/* mouseDown: hover inside of cursor */
.mouseDown .cursor .hover.node.list.nil {
  border-radius: 0;
  box-shadow: none;
  background-color: white;
}

/* mouseDown: cursor outside of hover */
.mouseDown .cursor.node.list.nil {
  border-radius: 0;
  box-shadow: none;
  background-color: unset;
}

/* mouseDown: cursor inside of hover */
.mouseDown .hover .cursor.node.list.nil {
  border-radius: 0;
  box-shadow: none;
  background-color: white;
}

/* fancy .node.cursor */

/* .node {
  transition-property: margin-left, margin-right;
}

.node.cursor {
  transition-duration: 0.2s;
  transition-timing-function: linear;
  margin-left: 1rem;
  margin-right: 1rem;
} */

/* hover:cursor: */

.hole-inner.cursorable {
  cursor: text;
}

.cursorable > .bnd-inner {
  cursor: text;
}

/* tm_ty-boundary */

.tm_ty-boundary-inner {
  display: inline;
  border-radius: 0.2rem;
  padding: 0 0.1rem;
  /* padding: 0 0.2rem; */
  /* background-color: rgb(255, 211, 192); */
  /* box-shadow: 0 0 0 4px rgb(255, 211, 192) inset; */
}

.node.tm_ty-boundary-term {
  display: inline;
  margin-right: 0.1rem;
}

.node.tm_ty-boundary-change {
  display: inline;
  margin-left: 0.1rem;
  padding: 0 0.2rem;
  box-shadow: 
    0 0 0 2px purple inset, 
    0 0 2px 1px black inset,
    0 0 5px 0 rgb(93, 93, 93);
}

/* misc */

.apologize {
  font-size: 48pt;
  font-weight: bold;

  border: 1px solid red;
  border-width: 1px;

  /* transition: border-width */
  transition-property: border-width;
  transition-timing-function: ease-in-out;
  transition-duration: 1s;
}

.apologize:hover {
  border-width: calc(100vw / 2);

  /* transition: border-width */
  transition-property: border-width;
  transition-timing-function: ease-in-out;
  transition-duration: 20s;
}

.not-apologize {
  font-size: 8pt;

  position: absolute;
  bottom: 0;
}

/* animations */

@keyframes blink-visibility-animation {
  to {
    visibility: hidden;
  }
}

@-webkit-keyframes blink-visibility-animation {
  to {
    visibility: hidden;
  }
}

@keyframes blink-box-shadow-animation {
  to {
    box-shadow: none;
  }
}

@-webkit-keyframes blink-box-shadow-animation {
  to {
    box-shadow: none;
  }
}

@keyframes blink-background-color-animation {
  to {
    background-color: unset;
  }
}

@-webkit-keyframes blink-background-color-animation {
  to {
    background-color: unset;
  }
}